#JS
Autofocus: es un evento para que cuando se inicie la pagina el curso apunte al campo a completar 

text-content: para ver el texto de un elemento.

Fetch: manejador de peticiones Http, que contiene los verbos.
        // fetch('../Json/usuarios.json')
        // .then(r => r.json()).then(res => console.log(res));

#CSS
display-none: ocultar
display-block: aparecer

el * selecciona todos los elementos, y box-sizing sirve para manegar como se dimensionan
los nodos, en este caso border box va a tener en cuenta hasta el borde cuando
dimensiones un nodo.
* {
    box-sizing: border-box
    ;
}

#HTML
required: te obliga a completar el campo.


botonIniciar.addEventListener('click', () => {
    const user = {
        "usuario": "Pedrito",
        "contrasenia": 9809
    }

    fetch('usuarios.json', {
        method: 'POST',
        headers: {
            "Content-type": "application/json"
        },
        body: JSON.stringify(user)
    })
        .then(res => res.json())
        .then(data => console.log(data));

})


# Local storage 
Local storage es basicamente un mapa, [key, value] donde el key es 
el nombre que queramos y el valor es nuestra variable a guardar, 
si usamos un objeto lo tenemos que guardar como un string 

guardamos el item 
window.localStorage.setItem('solicitudParaActualizar',JSON.stringify(solicitudParaActualizar));

traemos el item
var solicitudParaActualizarString = window.localStorage.getItem('solicitudParaActualizar');
